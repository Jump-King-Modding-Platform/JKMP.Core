name: Publish NuGet package and create GitHub release

on:
  push:
    tags:
      - v*

jobs:
  package:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout files
        uses: actions/checkout@v2
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
          source-url: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Restore packages
        run: dotnet restore
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build project
        run: dotnet build --no-restore -c Release
      - name: Run tests
        run: dotnet test --no-build --verbosity normal
      - name: Package project
        run: dotnet pack --no-build -c Release
      - name: Publish package
        run: dotnet nuget push JKMP.Core/bin/Release/*.nupkg --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --api-key ${{ secrets.GITHUB_TOKEN }} --skip-duplicate
      - name: Package artifact
        uses: vimtor/action-zip@v1
        with:
          files: >
            JKMP.Core/bin/Release/net462/JKMP.Core.dll
            JKMP.Core/bin/Release/net462/Serilog.dll
            JKMP.Core/bin/Release/net462/Serilog.Expressions.dll
            JKMP.Core/bin/Release/net462/Serilog.Sinks.Console.dll
            JKMP.Core/bin/Release/net462/Serilog.Sinks.File.dll
            JKMP.Core/bin/Release/net462/Serilog.Enrichers.Demystifier.dll
            JKMP.Core/bin/Release/net462/Ben.Demystifier.dll
            JKMP.Core/bin/Release/net462/0Harmony.dll
            JKMP.Core/bin/Release/net462/Semver.dll
            JKMP.Core/bin/Release/net462/Newtonsoft.Json.dll
            JKMP.Core/bin/Release/net462/Facepunch.Steamworks.Win32.dll
          dest: out/JKMP.Core.zip
      - name: Upload artifact
        uses: actions/upload-artifact@v2.3.1
        with:
          name: JKMP.Core.zip
          path: out/JKMP.Core.zip
  release:
    runs-on: ubuntu-latest
    needs: package
    
    # Only create release if the tag does not have a -prerelease (or other) suffix
    if: endsWith(github.ref, 'v[0-9]+\.[0-9]+\.[0-9]+')
    
    steps:
      - name: Downlod artifact
        uses: actions/download-artifact@v2.1.0
        with:
          name: JKMP.Core.zip
          path: JKMP.Core.zip
      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          name: Modular release
          artifacts: JKMP.Core.zip
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          generateReleaseNotes: true
  prerelease:
    runs-on: ubuntu-latest
    needs: package
    
    # Only create release if the tag ends with -prerelease (or other) suffix
    if: endsWith(github.ref, 'v[0-9]+\.[0-9]+\.[0-9]+-.+')
    
    steps:
      - name: Downlod artifact
        uses: actions/download-artifact@v2.1.0
        with:
          name: JKMP.Core.zip
          path: JKMP.Core.zip
      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          name: Modular prerelease
          artifacts: JKMP.Core.zip
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          generateReleaseNotes: true
          prerelease: true